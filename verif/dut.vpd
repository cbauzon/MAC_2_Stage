$date
   Thu Jul 25 23:55:54 2024
$end

$version
  2023.2
  $dumpfile ("dut.vpd") 
$end

$timescale
  1ps
$end

$scope module top $end
$var reg 1 ! clk $end
$scope module intf $end
$var wire 1 " clk $end
$var reg 1 # rst $end
$var reg 8 $ A [7:0] $end
$var reg 8 % B [7:0] $end
$var reg 32 & out [31:0] $end
$upscope $end
$scope module DUT $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var wire 8 ) A [7:0] $end
$var wire 8 * B [7:0] $end
$var reg 32 + out [31:0] $end
$var reg 16 , mult_out [15:0] $end
$var reg 16 - mult_out_comb [15:0] $end
$var reg 32 . add_out [31:0] $end
$var reg 32 / add_out_comb [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end

#0
$dumpvars
0!
0"
x#
bx $
bx %
bx &
0'
x(
bx )
bx *
bx +
bx ,
b0 -
bx .
bx /
$end

#10000
1!
1"
0#
b0 &
1'
0(
b0 +
b0 ,
b0 .
b0 /

#20000
0!
0"
0'

#30000
1!
1"
1'

#40000
0!
0"
0'

#50000
1!
1"
1'

#60000
0!
0"
0'

#70000
1!
1"
1#
b100 $
b11111101 %
1'
1(
b100 )
b11111101 *
b1111110100 -

#80000
0!
0"
0'

#90000
1!
1"
b111100 $
b10000111 %
1'
b111100 )
b10000111 *
b1111110100 ,
b1111110100100 -
b1111110100 /

#100000
0!
0"
0'

#110000
1!
1"
b101111 $
b10100110 %
b1111110100 &
1'
b101111 )
b10100110 *
b1111110100 +
b1111110100100 ,
b1111001111010 -
b1111110100 .
b10001110011000 /

#120000
0!
0"
0'

#130000
1!
1"
b11001011 $
b10000001 %
b10001110011000 &
1'
b11001011 )
b10000001 *
b10001110011000 +
b1111001111010 ,
b110011001001011 -
b10001110011000 .
b100001000010010 /

#140000
0!
0"
0'

#150000
1!
1"
b1100110 $
b11110100 %
b100001000010010 &
1'
b1100110 )
b11110100 *
b100001000010010 +
b110011001001011 ,
b110000100111000 -
b100001000010010 .
b1010100001011101 /

#160000
0!
0"
0'

#170000
1!
1"
0#
b0 &
1'
0(
b0 +
b0 ,
b0 .
b0 /

#180000
0!
0"
0'

#190000
1!
1"
1'

#200000
0!
0"
0'

#210000
1!
1"
1'

#220000
0!
0"
0'

#230000
1!
1"
1'

#240000
0!
0"
0'

#250000
1!
1"
1'

#260000
0!
0"
0'

#270000
1!
1"
1#
b11110000 $
b110001 %
1'
1(
b11110000 )
b110001 *
b10110111110000 -

#280000
0!
0"
0'

#290000
1!
1"
b10011101 $
b10111011 %
1'
b10011101 )
b10111011 *
b10110111110000 ,
b111001010101111 -
b10110111110000 /

#300000
0!
0"
0'

#310000
1!
1"
b11100101 $
b100111 %
b10110111110000 &
1'
b11100101 )
b100111 *
b10110111110000 +
b111001010101111 ,
b10001011100011 -
b10110111110000 .
b1010000010011111 /

#320000
0!
0"
0'

#330000
1!
1"
b10000110 $
b10001101 %
b1010000010011111 &
1'
b10000110 )
b10001101 *
b1010000010011111 +
b10001011100011 ,
b100100111001110 -
b1010000010011111 .
b1100001110000010 /

#340000
0!
0"
0'

#350000
1!
1"
b111111 $
b10010111 %
b1100001110000010 &
1'
b111111 )
b10010111 *
b1100001110000010 +
b100100111001110 ,
b10010100101001 -
b1100001110000010 .
b10000110101010000 /

#360000
0!
0"
0'

#370000
1!
1"
b10000110101010000 &
1'
b10000110101010000 +
b10010100101001 ,
b10000110101010000 .
b10011001001111001 /

#380000
0!
0"
0'

#390000
1!
1"
b10011001001111001 &
1'
b10011001001111001 +
b10011001001111001 .
b10101011110100010 /

#400000
0!
0"
0'
